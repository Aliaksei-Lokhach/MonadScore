name: MonadScore CI

on:
  schedule:
    - cron: '10 0 * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DISPLAY: :99
      SEED_10: ${{ secrets.SEED_PHRASE_10 }}
      MAIL_10: ${{ secrets.EMAIL_10 }}
      SEED_9: ${{ secrets.SEED_PHRASE_9 }}
      MAIL_9: ${{ secrets.EMAIL_9 }}
      SEED_8: ${{ secrets.SEED_PHRASE_8 }}
      MAIL_8: ${{ secrets.EMAIL_8 }}
      SEED_7: ${{ secrets.SEED_PHRASE_7 }}
      MAIL_7: ${{ secrets.EMAIL_7 }}
      SEED_6: ${{ secrets.SEED_PHRASE_6 }}
      MAIL_6: ${{ secrets.EMAIL_6 }}
      SEED_5: ${{ secrets.SEED_PHRASE_5 }}
      MAIL_5: ${{ secrets.EMAIL_5 }}
      SEED_4: ${{ secrets.SEED_PHRASE_4 }}
      MAIL_4: ${{ secrets.EMAIL_4 }}
      SEED_3: ${{ secrets.SEED_PHRASE_3 }}
      MAIL_3: ${{ secrets.EMAIL_3 }}
      SEED_2: ${{ secrets.SEED_PHRASE_2 }}
      MAIL_2: ${{ secrets.EMAIL_2 }}
      SEED_1: ${{ secrets.SEED_PHRASE_1 }}
      MAIL_1: ${{ secrets.EMAIL_1 }}
      SEED_0: ${{ secrets.SEED_PHRASE_0 }}
      MAIL_0: ${{ secrets.EMAIL_0 }}
      PASS: ${{ secrets.PASSWORD }}
      PIN: ${{ secrets.PIN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'liberica'

      - name: Install tools (Xvfb + ffmpeg)
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb ffmpeg x11-utils

      - name: Start Xvfb
        run: |
          Xvfb :99 -screen 0 1366x768x24 &
          sleep 3

      - name: Start recording screen with ffmpeg
        run: |
          ffmpeg -y -video_size 1366x768 -framerate 15 -f x11grab -i :99 -codec:v libx264 -pix_fmt yuv420p screen_recording.mp4 > /dev/null 2>&1 &
          echo $! > ffmpeg_pid.txt

      - name: Run UI tests
        run: |
          echo "DISPLAY is $DISPLAY"
          mvn clean test \
          -DPASSWORD="$PASS" -DPIN="$PIN" \
          -DSEED_PHRASE_10="$SEED_10" -DEMAIL_10="$MAIL_10" \
          -DSEED_PHRASE_9="$SEED_9" -DEMAIL_9="$MAIL_9" \
          -DSEED_PHRASE_8="$SEED_8" -DEMAIL_8="$MAIL_8" \
          -DSEED_PHRASE_7="$SEED_7" -DEMAIL_7="$MAIL_7" \
          -DSEED_PHRASE_6="$SEED_6" -DEMAIL_6="$MAIL_6" \
          -DSEED_PHRASE_5="$SEED_5" -DEMAIL_5="$MAIL_5" \
          -DSEED_PHRASE_4="$SEED_4" -DEMAIL_4="$MAIL_4" \
          -DSEED_PHRASE_3="$SEED_3" -DEMAIL_3="$MAIL_3" \
          -DSEED_PHRASE_2="$SEED_2" -DEMAIL_2="$MAIL_2" \
          -DSEED_PHRASE_1="$SEED_1" -DEMAIL_1="$MAIL_1" \
          -DSEED_PHRASE_0="$SEED_0" -DEMAIL_0="$MAIL_0"

      - name: Stop screen recording
        if: always()
        run: |
          kill -INT $(cat ffmpeg_pid.txt)
          sleep 2

      - name: Upload screen recording
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: screen-recording
          path: screen_recording.mp4

      - name: Move screen recording to allure-results
        if: always()
        run: |
          mkdir -p target/allure-results
          cp screen_recording.mp4 target/allure-results/

      - name: Get Allure history
        uses: actions/checkout@v2
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Allure Report action from marketplace
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: target/allure-results
          allure_history: allure-history

      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-history
